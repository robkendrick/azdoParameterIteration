parameters:
  - name: deploymentResources
    type: object
    default:
      - type: keyVault
        namePrefix: project00kv
        rGTN: Ops
        template: null
        suffix: abcdefghij
      - type: database
        namePrefix: project01sqls
        rGTN: Data
        template: null
        suffix: jihgfedcba
        accessIdentities:
          - namePrefix: WebsiteA
            instances: [ "00" ]
            type: mid
          - namePrefix: WebsiteB
            instances: ['00']
            type: mid
          - namePrefix: AppGateway
            instances:
              - '00'  # If you leave this as an integer (without the quotes), the leading zero will be dropped.
            type: mid

variables:
  system.debug: true

jobs:
  - job: IterationAndAssignment
    displayName: "Iterate through each Supporting Resource and pull via environment variables."
    steps:
      - checkout: none
      - bash: |
          echo "Number of resources: $numRes"
          echo "SQL Server for this run: $sqlServerName"
        env:
          numRes: ${{ length(parameters.deploymentResources) }}
          ${{ each res in parameters.deploymentResources }}:
              ${{ if eq(res.type, 'database') }}:
                sqlServerName: ${{res.namePrefix}}${{res.suffix}}

      - ${{ each res in parameters.deploymentResources }}:
          - bash: |
              echo "The resource we're working with is $namePrefix in the ProjectDev-$rGTN Resource Group."
              echo "It is a $type."
              echo ""; echo ""
              echo "Let's try to assign them as outputs."
              echo "##vso[task.setvariable variable=suffix;isOutput=true]$suffix"
            env:
              type: ${{res.type}}
              namePrefix: ${{res.namePrefix}}
              rGTN: ${{res.rGTN}}
              suffix: ${{res.suffix}}
            name: ${{res.type}}

  - job: TestIterationOutput
    displayName: "See if we can dynamically name the steps under the job."
    dependsOn: IterationAndAssignment
    variables:
      - ${{ each res in parameters.deploymentResources }}:
          - name: ${{res.type}}Suffix
            value: $[dependencies.IterationAndAssignment.outputs['${{res.type}}.suffix']]
    steps:
      - checkout: none
      - ${{ each res in parameters.deploymentResources }}:
          - bash: |
              echo "Macro variable test for the suffix: $(${{res.type}}Suffix)"
              echo "Environment variable Macro test for the suffix: $suffix"
            env:
              suffix: $(${{res.type}}Suffix)
            displayName: Check variables for ${{res.namePrefix}}.
          - ${{ each id in res.accessIdentities }}:
              - ${{ each instance in id.instances }}:
                  - bash: |
                      echo "Identity to whom we're providing permissions: ${{id.namePrefix}}${{instance}}${{id.type}}"
                    displayName: "Identity: ${{id.namePrefix}}${{instance}}${{id.type}}"